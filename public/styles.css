body {
    height: 100vh;
    margin: 0;

    display: grid;
    grid-template-rows: auto 1fr auto;

    background: linear-gradient(180deg, #26AB72, #1D3D66);

    font-family: 'Roboto', sans-serif;

    --animation-time: .5s;
    --tile-width: 70%;
    --tile-height: 80%;
}

header {
    padding: 1.5rem;
}

header > h1 {
    margin: 0;

    color: white;
    
    font-weight: normal;
    font-size: 2.5rem;
    text-align: center;
}

footer {
    padding: 1.5rem;

    text-align: center;
}

button {
    color: white;
    background: none;
    border: none;

    font-size: 1.5rem;
    font-family: inherit;
}

button[disabled] {
    opacity: 0.5;

    text-decoration: line-through;
}

main {
    position: relative;

    display: flex;
    justify-content: center;
    align-items: center;

    overflow: hidden;
}

.tile {
    position: absolute;
    height: var(--tile-height);
    width: var(--tile-width);
    padding: 2rem;
    box-sizing: border-box;

    display: flex;
    justify-content: center;
    align-items: center;

    background: #EBEBEB;
    border-radius: 20px;
    box-shadow: 0px 4px 13px 0px #00000030, 0px 15px 20px #00000030;

    font-size: 8vw;
    text-align: center;
}

.tile.prevToDelete {
    animation: prevToDelete var(--animation-time) both;
}

.tile.currentToPrev {
    animation: currentToPrev var(--animation-time) both;
}

.tile.nextToCurrent {
    animation: nextToCurrent var(--animation-time) both;
}

.tile.newToNext {
    animation: newToNext var(--animation-time) both;
}

@keyframes prevToDelete {
    from { transform: translateX(-110%); }
    to { transform: translateX(-220%); }
}

@keyframes currentToPrev {
    from { transform: translateX(0%); }
    to { transform: translateX(-110%); }
}

@keyframes nextToCurrent {
    from { transform: translateX(110%); }
    to { transform: translateX(0%); }
}

@keyframes newToNext {
    from { transform: translateX(220%); }
    to { transform: translateX(110%); }
}
